@using Microsoft.AspNetCore.Identity
@using WhatDoYouMeme.Services
@using System.Security.Claims
@using WhatDoYouMeme.Infrastructure
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IMemerService Memers

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
            {
                var userId = this.User.FindFirst(ClaimTypes.NameIdentifier).Value;
                var userIsMemer = Memers.IsMemer(userId);
                var userIsAdmin = User.IsAdmin();
     @if (userIsMemer && !userIsAdmin)
     {
         <li class="nav-item">
             <a class="nav-link text-dark" asp-area="" asp-controller="Memes" asp-action="Mine">My memes</a>
         </li>
     }
     else if(!userIsAdmin)
     {
         <li class="nav-item">
             <a class="nav-link text-dark" asp-area="" asp-controller="Memers" asp-action="Create">Become a Memer!</a>
         </li> 
     }
                <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
